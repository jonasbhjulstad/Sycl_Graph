function(add_custom_static_library source_file)
    add_library(${source_file} STATIC "${source_file}.cpp")
    target_link_libraries(${source_file} PUBLIC Sycl_Graph Static_RNG::Static_RNG oneDPL cppitertools::cppitertools)
    target_compile_options(${source_file} PUBLIC -fsycl -std=c++20 -fsycl-unnamed-lambda)
    target_compile_options(${source_file} PUBLIC ${SYCL_COMPILE_OPTIONS})
    target_compile_options(${source_file} PUBLIC ${DEFAULT_WARNING_FLAGS})
    if(${SYCL_GRAPH_USE_CUDA})
        target_compile_options(${source_file} PUBLIC -fsycl ${SYCL_GRAPH_CUDA_FLAGS})
        target_link_options(${source_file} PUBLIC -fsycl ${SYCL_GRAPH_CUDA_FLAGS})
    endif()
    target_include_directories(${PROJECT_NAME} INTERFACE "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>")

    target_link_options(${source_file} PUBLIC ${DPCPP_FLAGS}-std=c++20 -fsycl-unnamed-lambda)
endfunction()

function(add_custom_interface_library libname)
    add_library(${libname} INTERFACE)
    target_link_libraries(${libname} INTERFACE Sycl_Graph Static_RNG::Static_RNG oneDPL cppitertools::cppitertools)
    target_compile_options(${libname} INTERFACE -fsycl -std=c++20 -fsycl-unnamed-lambda)
    target_compile_options(${libname} INTERFACE ${SYCL_COMPILE_OPTIONS})
    target_compile_options(${libname} INTERFACE ${DEFAULT_WARNING_FLAGS})
    if(${SYCL_GRAPH_USE_CUDA})
        target_compile_options(${libname} INTERFACE -fsycl ${SYCL_GRAPH_CUDA_FLAGS})
        target_link_options(${libname} INTERFACE -fsycl ${SYCL_GRAPH_CUDA_FLAGS})
    endif()
    target_include_directories(${PROJECT_NAME} INTERFACE "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>")

    target_link_options(${libname} INTERFACE ${DPCPP_FLAGS}-std=c++20 -fsycl-unnamed-lambda)
endfunction()
